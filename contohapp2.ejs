const express = require('express');
const mqtt = require('mqtt');
const path = require('path');

const app = express();
const port = 2800;

let latestSensorData = '0';

const mqttClient = mqtt.connect('mqtt://broker.emqx.io:1883');

mqttClient.on('connect', () => {
  console.log('Connected to MQTT broker');
  mqttClient.subscribe('potensiometer_husni', (err) => {
    if (err) {
      console.error('Failed to subscribe to topic "potensiometer_husni":', err);
    } else {
      console.log('Subscribed to topic "potensiometer_husni"');
    }
  });
});

mqttClient.on('message', (topic, message) => {
  if (topic === 'potensiometer_husni') {
    latestSensorData = message.toString();
    console.log(`Received message from ${topic}: ${latestSensorData}`);
  }
});

mqttClient.on('error', (err) => {
  console.error('MQTT connection error:', err);
});

app.use(express.static('public'));
app.use(express.json());

app.post('/publish', (req, res) => {
  const { topic, message } = req.body;
  mqttClient.publish(topic, message, (err) => {
    if (err) {
      res.status(500).send('Error publishing message');
    } else {
      res.send('Message published successfully');
    }
  });
});

app.get('/sensor-data', (req, res) => {
  res.json({ data: latestSensorData });
});

app.get('/', (req, res) => {
  res.sendFile(path.join(__dirname, 'public', 'index.html'));
});

app.listen(port, () => {
  console.log(`Express server listening at http://localhost:${port}`);
});




